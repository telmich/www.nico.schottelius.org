--------------------------------------------------------------------------------
configuring cinit, Nico Schottelius 2005-05-28
--------------------------------------------------------------------------------

0. Pre-compile configuration

Have a look at conf/*. Those variable will mostly be used when
compiling cinit. Some will be read later (like destdir).

1. General configuration layout

/etc/cinit (configureable via conf/cinit_dir) stores the complete
cinit configuration.

cinit is service based.
A service consists of
   - a base directory (like /etc/cinit/getty/1)
   - dependency configuration:

      ./wants  - services it wants to be started before (but it
                 will work anyway)

      ./needs/ - services it needs. If those services fail, this service
                 won't be started
 
   - the program to run when switching the service on
   - a flag indicating whether to respawn the service:

      ./respawn (simply touch it)


Services
2. Hints

2.0 Service executing / parameters

on/off -> link
mostly no shell scripts

linking to system configuration

2.1 Daemons
pidfilehack
pidfilehack - from fefe/minit?
not forking!
writing to stdout

2.2 Logging

Currently there's no special logging support.
When programs write to stdout, it will be displayed on
the same stdout cinit is connected to
(we don't even open /dev/console - we are too lazy currently).

2.3 Using prepared scripts

In the bin/ directory of this tarball you'll find:

   cinit.add.dependency - add a dependency to a service
   cinit.add.getty      - add a new getty
   cinit.create.empty.service - create an empty service
   cinit.remove.getty   - remove a getty service
   cinit.respawn.off    - switch respawing off
   cinit.respawn.on     - switch respawing on
   cinit.shutdown       - shutdown in /bin/sh

adding services with cinit.add.service? -> later, meta-deps?

meta-deps

X. Examples

X.0 Getty
X.1 OpenSSH

