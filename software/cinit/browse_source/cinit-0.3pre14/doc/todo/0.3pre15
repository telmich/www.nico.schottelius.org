Wished release date: 20. September
- Add support for starting/stoping services via cmd
   - add support for additional information (like which services stopped
     when having dependencies)
   - if cinit has to stop / start others, how to report?
   - add strings to cinit internally to a buffer?
      -> or struct cinit_answer + status

- add support to enable services

- create some boot profiles
- cinit.install.standard.dirs.argv
- code check:
   * check needs:
      really started, after started or after finished starting?
   * wants:
      are they checked?

- fix devel/codingguideline.text!

- perhaps merge svc_need_status to svc_status

cinit-communication:
   cinit_get_failed_needs(char *name, int *cnt);
- add support for shutting down services on halt
- cleanup msgq/cinit_ipc_listen.c
- move logic out of the child handler:
   => use the new while()-loop in core/cinit.c!

   time() and co. are problematic in a child handler!

   introduce global list of services to execute
      => perhaps reuse already existing dependency-list?

   tree_exec(): check whether adding something to the dep list hurts
      => don't think so.
   expand / change ipc handler:
      make it return the message
      move while() loop to core/cinit.c
      
      in the while loop, the global dependency list should
      be empty.

      if it is not, we should start something.

   => chance cinit_ipc_listen() to use without while() loop
      => export logic to core/cinit.c
- map status numbers to messages
- Cleanup doc/user/NEW_using_cinit_freebsd
   => make a real document!
- change to GPLv3?
   => ask Markus (cinit), Killerfox (cconfig) and Peter (cconfig)
- write / update manpage for cmd!
- add sleep() support after service exited.

--------------------------------------------------------------------------------
Done:
- add minimal test-suite:
   cmd -s /etc/cinit/svc/init
   cmd -p /etc/cinit/svc/init
   cmd -v
   cmd -V
